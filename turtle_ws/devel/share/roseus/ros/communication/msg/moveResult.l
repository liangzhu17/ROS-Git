;; Auto-generated. Do not edit!


(when (boundp 'communication::moveResult)
  (if (not (find-package "COMMUNICATION"))
    (make-package "COMMUNICATION"))
  (shadow 'moveResult (find-package "COMMUNICATION")))
(unless (find-package "COMMUNICATION::MOVERESULT")
  (make-package "COMMUNICATION::MOVERESULT"))

(in-package "ROS")
;;//! \htmlinclude moveResult.msg.html


(defclass communication::moveResult
  :super ros::object
  :slots (_total_time_used ))

(defmethod communication::moveResult
  (:init
   (&key
    ((:total_time_used __total_time_used) 0)
    )
   (send-super :init)
   (setq _total_time_used (round __total_time_used))
   self)
  (:total_time_used
   (&optional __total_time_used)
   (if __total_time_used (setq _total_time_used __total_time_used)) _total_time_used)
  (:serialization-length
   ()
   (+
    ;; uint32 _total_time_used
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; uint32 _total_time_used
       (write-long _total_time_used s)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; uint32 _total_time_used
     (setq _total_time_used (sys::peek buf ptr- :integer)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get communication::moveResult :md5sum-) "7d783291dfe0333a693a075000a0e15a")
(setf (get communication::moveResult :datatype-) "communication/moveResult")
(setf (get communication::moveResult :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define the result
uint32 total_time_used

")



(provide :communication/moveResult "7d783291dfe0333a693a075000a0e15a")


